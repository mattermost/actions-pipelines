on:
  workflow_call:
    inputs:
      artifacts:
        default: "*.tar.gz"
        description: |
          The path or files of artifacts to upload
        required: false
        type: string

      bucket:
        default: mattermost-plugins-ci/release/
        description: |
          The S3 bucket full path to upload
        required: false
        type: string

      golang-version:
        default: "1.21"
        description: |
          Set the version for golang
        required: false
        type: string

      region:
        default: us-east-2
        description: |
          The AWS region for S3 bucket
        required: false
        type: string

permissions:
  contents: read

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: ci/setup
        uses: mattermost/actions/plugin-ci/setup@091f859f342b4cd442e9f2b55594c7d1c9a63946
        with:
          golang-version: ${{ inputs.golang-version }}

      - name: ci/build
        env:
          MM_RUDDER_PLUGINS_PROD: ${{ secrets.MM_RUDDER_PLUGINS_PROD }}
          MM_RUDDER_CALLS_PROD: ${{ secrets.MM_RUDDER_CALLS_PROD }}
          MM_RUDDER_DATAPLANE_URL: ${{ secrets.MM_RUDDER_DATAPLANE_URL }}
        uses: mattermost/actions/plugin-ci/build@091f859f342b4cd442e9f2b55594c7d1c9a63946

  release-s3:
    if: startsWith(github.ref, 'refs/tags/v') && github.repository_owner == 'mattermost'
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: ci/download-artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
        with:
          name: dist
          path: dist

      - name: ci/prepare-artifact
        run: |
          mv *.tar.gz ${GITHUB_REPOSITORY#*/}-latest.tar.gz
          cp ${GITHUB_REPOSITORY#*/}-latest.tar.gz ${GITHUB_REPOSITORY#*/}-$GITHUB_REF_NAME.tar.gz
        working-directory: dist

      - name: ci/aws-configure
        uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a #v4.0.1
        with:
          aws-region: ${{ inputs.region }}
          aws-access-key-id: ${{ secrets.PLUGIN_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PLUGIN_AWS_SECRET_ACCESS_KEY }}

      - name: ci/artifact-upload
        shell: bash
        run: |
          aws s3 cp ${GITHUB_REPOSITORY#*/}-latest.tar.gz s3://${{ inputs.bucket }} --acl public-read --cache-control no-cache
          aws s3 cp ${GITHUB_REPOSITORY#*/}-${GITHUB_REF_NAME}.tar.gz s3://${{ inputs.bucket }} --acl public-read --cache-control no-cache
        working-directory: dist

  release-github:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    needs: [release-s3]
    steps:
      - name: cd/checkout-repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: "0"
      - name: ci/download-artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
        with:
          name: dist
          path: dist
      - name: ci/publish-release
        run: |
          gh release create "$GITHUB_REF_NAME" --title "$GITHUB_REF_NAME" --notes-file release-notes.md  *.tar.gz
        working-directory: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
