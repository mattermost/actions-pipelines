on:
  workflow_call:
    inputs:
      artifacts:
        default: dist/*.tar.gz
        description: |
          The path or files of artifacts to upload
        required: false
        type: string

      bucket:
        default: mattermost-plugins-ci/release/
        description: |
          The S3 bucket full path to upload
        required: false
        type: string

    secrets:
      aws-access-key-id:
        description: |
          The AWS access key ID
        required: true
      aws-secret-access-key:
        description: |
          The AWS access secret key
        required: true
      github-token:
        description: |
          The Github token to publish artifacts
        required: true

permissions:
  contents: read

jobs:
  release:
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: ci/download-artifact
        uses: actions/download-artifact@9782bd6a9848b53b110e712e20e42d89988822b7 # v3.0.1
        with:
          name: dist
          path: dist

      - name: ci/prepare-artifact
        run: |
          mv *.tar.gz ${GITHUB_REPOSITORY#*/}-latest.tar.gz
          cp ${GITHUB_REPOSITORY#*/}-latest.tar.gz ${GITHUB_REPOSITORY#*/}-$GITHUB_REF_NAME.tar.gz
        working-directory: dist

      - name: ci/aws-configure
        uses: aws-actions/configure-aws-credentials@67fbcbb121271f7775d2e7715933280b06314838 # v1.7.0
        with:
          aws-region: ${{ inputs.region }}
          aws-access-key-id: ${{ secrets.PLUGIN_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PLUGIN_AWS_SECRET_ACCESS_KEY }}

      - name: ci/artifact-upload
        shell: bash
        run: |
          aws s3 cp ${{ inputs.artifacts }} s3://${{ inputs.bucket }} --acl public-read --cache-control no-cache
        working-directory: dist

      - name: ci/publish-release
        run: |
          ghr -b "$(< ./release-notes.md)" -c ${GITHUB_REF_NAME} -n ${GITHUB_REF_NAME} -delete ${GITHUB_REF_NAME} *.tar.gz
        working-directory: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
